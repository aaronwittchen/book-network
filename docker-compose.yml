services:
  postgres:
    image: postgres:17
    container_name: postgres-sql-book-network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - book-network
    restart: unless-stopped

  mail-dev:
    image: maildev/maildev:latest
    container_name: mail-dev-book-network
    ports:
      - '1080:1080'
      - '1025:1025'
    networks:
      - book-network

  prometheus:
    image: prom/prometheus:latest
    container_name: book-network-prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - book-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: book-network-grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - book-network
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: book-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - '9200:9200'
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - book-network
    restart: unless-stopped

networks:
  book-network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  elasticsearch-data:
    driver: local
